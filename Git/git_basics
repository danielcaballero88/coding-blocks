# Create

Create new directory and "git init" to begin.  # Esto para empezar de forma local
git clone $url $folder_name(optional)	# clone remote project into folder 

# Check status

git branch -a  # shows all local and remote branches with colors
git status  # checks status (if up to date, or needs to pull or push new commits)
git remote get-url origin  # get url of origin

# Change branches

git checkout $branchname # change to $branchname
git checkout -b $branchname $frombranch	 # creates $branchname tracking remote branch $frombranch

# Pull

git fetch  # pull changes (not the commits, only the information about new commits)
git pull  # sync latest remote version to local repo (watch out for conflicts!)
git pull origin $remotebranchname  # pulls $remotebranchname into current branch (wath out for merge in case of mistakes)

# Commit 

git add	$filename  # adds file to INDEX. If $filename="." then all files to INDEX (maybe?)
git commit -m $message  # save changes with message. ($message is string, e.g., "change")
git commit  # save changes and prompts for message, allowing a message with a title and a body

# Push

git push  # sync local changes to remote repo (watch out for conflicts!)
git push -u origin $branchname  # push current local branch to remote branch $branchname (-u to set tracking between those 2, only first time)
git push origin $branchname  # push current local branch to remote branch $branchname

# Delete

git branch -D $branchname  # delete local branch
git push origin :$branchname  # delete remote branch (user previous command first)
git remote prune origin  # remove stale branches from 'git branch -a'

# STASHING (para moverse a otra rama sin commitear modificaciones a medias)

git stash  # almacenar cambios no commiteados en un stash (se van de la rama)
git stash apply  # recuperar cambios guardados en un stash
git stash clear  # eliminar stashes guardados
